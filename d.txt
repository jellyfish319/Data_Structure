import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.* ;
import java.io.* ;

public class Main {
    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        Scanner sc = new Scanner(System.in) ;

        String line = br.readLine() ;
        StringTokenizer st = new StringTokenizer(line, " ") ;

        int N = Integer.parseInt(st.nextToken()) ; // 행
        int M = Integer.parseInt(st.nextToken()) ; // 열

        // 행렬 생성

        int[][] matrix ;
        matrix = new int[N][M] ;

        for(int i = 0 ; i < N ; i++) {
            line = br.readLine() ;
            for(int j = 0 ; j < M ; j++) {
                matrix[i][j] = Character.getNumericValue(line.charAt(j)) ;
            }
        }

        // 등차수열 생성

        int output = -1 ;

        for (int a = -N ; a < N ; a++) {
            for (int x = 0 ; x < N ; x++) {
                for (int b = -M ; b < M ; b++) {
                    for (int y = 0 ; y < M ; y++) { // 모든 좌표에 대한 완전탐색
                        int x1 = x;
                        int y1 = y; // 초기 좌표
                        int k = 0 ; // k값 초기화

                        if(a==0&&b==0) {
                            continue;
                        }
                        while((x1<N)&&(y1<M)&&(x1>=0)&&(y1>=0)) {
                            k += matrix[x1][y1] ; // 좌표의 값을 받음
                            if(k == (int)(Math.sqrt(k))*(int)(Math.sqrt(k))) {
                                output = Math.max(output, k) ; // 제곱수 판정
                            }
                            x1 += a ; // 좌표 업데이트
                            y1 += b ;
                            k *= 10 ; // k의 자릿수를 업데이트
                        }
                    }
                }
            }
        }
        System.out.print(output) ;
    }
}